@model StoreFront.DATA.EF.Balloon

@{
    ViewBag.Title = $"{Model.BalloonTitle}";
}

<h2>@ViewBag.Title</h2>

<div id="bContainer">
    <div id="bHeader">
        @Html.DisplayFor(model => model.BalloonTitle)
    </div>
    <div id="bLeft">
        <p>
            <img src="~/Content/assets/images/Balloons/@Model.BalloonImg"
                 alt="@Model.BalloonTitle" />
        </p>
        <p>
            <strong>
                @Html.DisplayNameFor(model => model.SerialNo)
                @Html.DisplayFor(model => model.SerialNo)
            </strong>
        </p>
    </div>

    <div id="bRight">
        <p>
            <strong>
                @Html.DisplayNameFor(model => model.Price)
                @Html.DisplayFor(model => model.Price)
            </strong>
        </p>
        <p>
            <strong>
                @Html.DisplayNameFor(model => model.BalloonStatu.BalloonStatusName)
                @Html.DisplayFor(model => model.BalloonStatu.BalloonStatusName)
            </strong>
        </p>
        <p>
            <strong>
                @Html.DisplayNameFor(model => model.Manufacturer.CompanyName)
                @Html.DisplayFor(model => model.Manufacturer.CompanyName)
            </strong>
        </p>
        <p>
            <strong>
                @Html.DisplayNameFor(model => model.ProdDate)
                @Html.DisplayFor(model => model.ProdDate)
            </strong>
        </p>
        <p>
            <strong>
                @Html.DisplayNameFor(model => model.Size)
                @Html.DisplayFor(model => model.Size)
            </strong>
        </p>
        <p>
            <strong>
                @Html.DisplayNameFor(model => model.Color)
                @Html.DisplayFor(model => model.Color)
            </strong>
        </p>
        <p>
            <strong>
                @Html.DisplayNameFor(model => model.IsCategoryFeature)
                @(Model.IsCategoryFeature ? "Yes" : "No")
            </strong>
        </p>
        <p>
            <strong>
                @Html.DisplayNameFor(model => model.Description)
                @Html.DisplayFor(model => model.Description)
            </strong>
        </p>
        <p>
            <strong>
                @Html.DisplayNameFor(model => model.Seasonal.SeasonName)
                @Html.DisplayFor(model => model.Seasonal.SeasonName)
            </strong>
        </p>
        <p>
            <strong>
                @Html.DisplayNameFor(model => model.UnitsSold)
                @Html.DisplayFor(model => model.UnitsSold)
            </strong>
        </p>
        <p>
            @* signature("action", "controller", routeValues, FormMethod, htmlAttributes) *@
            @using (Html.BeginForm("AddToCart", "Balloons", new { @bookID = Model.BalloonID }, FormMethod.Post, new { @class = "text-center" }))
            {
                @Html.HiddenFor(x => x.BalloonID)
                <span class="label cart-label">Quantity:</span>
                @Html.TextBox("Qty", 1, new { @class = "form-control", @style = "max-width: 50px; display:inline;" })
                <input type="submit" value="Add to Cart" class="btn btn-primary" name="qty" />
            }
        </p>

    </div>

    <div class="clearfix"></div>

    <div id="bFooterLeft">
        @if (User.IsInRole("Admin"))
        {
            @Html.ActionLink("Edit", "Edit", new { id = Model.BalloonID })
        }
    </div>
    <div id="bFooterRight">
        @Html.ActionLink("Back to Balloons", "Index", null, new { @class = "btn btn-secondary" })
    </div>
    <div class="clearfix"></div>

</div>

